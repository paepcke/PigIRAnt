#!/bin/bash

# Script that runs the PigScript webBaseAnchorAltTitleText.pig with
# command line paramters.
#
# Output file name is:
#    <destDir>/<crawlName>_<numPages>_<startSite>_<endSite>_xxx.txt
#
# where xxx is composed of underscore-separated combinations of 
# 'anchors', 'alts', and 'titles'. 
# Example: gov-04-2007_10000_www.state.gov_lastSite_anchors_alts.txt
#
# Defaults are: <destDir>: HDFS home directory of current user
#               <numPages>: 'allPages'
#               <startSite>: 'firstSite'
#               <endSite>: 'lastSite'

USAGE="Usage: webBaseAnchorText \n
                         \t\t\t [{-h | --help}] \n
                         \t\t\t [{-v | --version}] \n
                         \t\t\t [{-x | --execmode] {local | mapreduce}] \n
                         \t\t\t [{-d | --destdir} <destinationDirectory>] (default is pwd) \n
                         \t\t\t [{-n | --numpages} <numberOfPages>] (default is all) \n
                         \t\t\t [{-s | --startsite} <startSite>] (default is first site) \n
                         \t\t\t [{-e | --endsite} <endSite>] (default is last site) \n
                         \t\t\t One or more of:\n
                         \t\t\t\t [{-l | --linkanchors} (default is no link anchor text) \n
                         \t\t\t\t [{-a | --alttext} (default is no ALT tag text) \n
                         \t\t\t\t [{-t | --titletext} (default is no TITLE tag text) \n
                         \t\t\t <crawlName> \n
    \tExample: webBaseAnchorText -d /user/doe/myinfo --startsite www.emus.com --alttext gov-04-2007 \n
    \tExample: webBaseAnchorText --numpages 2 --linkanchors --alttext --titletext gov-04-2007"


PROGVERSION=1.0
EXEC_MODE=mapreduce
# Default destination is the
# cluster's HDFS home directory of
# the user who is issuing the 
# command. So, get the non-HDFS
# $HOME, chop off the last element,
# and prepend our cluster's HDFS
# '/user/' user directory:
DEST_DIR=/user/`basename $HOME`

NUM_PAGES=""
START_SITE=""
END_SITE=""

GET_ANCHORS="false"
GET_ALTS="false"
GET_TITLES="false"

# Build a Pig call to the UDF 
# AnchorAltTitleText(String content, boolean anchorText, boolean altText, boolean titleText).
# Initialize to the first part:
EXTRACT_CALL="pigir.pigudf.AnchorAltTitleText(content"

SHORTOPTS="hvx:d:n:s:e:lat"
LONGOPTS="help,version,execmode:,destdir:,numpages:,startsite:,endsite:,linkanchors,alttext,titletext"

ARGS=`getopt -s bash --options=$SHORTOPTS  \
  --longoptions=$LONGOPTS --name=$PROGNAME -- "$@"`

eval set -- "$ARGS"

while true; do
   case $1 in
      -h|--help)
         echo -e $USAGE
         exit 0
         ;;
      -v|--version)
         echo "$PROGVERSION"
	 exit 0
         ;;
      -x|--execmode)
         shift
         EXEC_MODE=$1
         ;;
      -d|--destdir)
         shift
         DEST_DIR=$1
         ;;
      -n|--numpages)
         shift
         NUM_PAGES=$1
         ;;
      -s|--startsite)
         shift
         START_SITE=$1
         ;;
      -e|--endsite)
         shift
         END_SITE=$1
         ;;
      -l|--linkanchors)
         GET_ANCHORS="true"
         ;;
      -a|--alttext)
         GET_ALTS="true"
         ;;
      -t|--titletext)
         GET_TITLES="true"
         ;;
      --)
         shift
         break
         ;;
      *)
         shift
         break
         ;;
   esac
   # Throw away the '--' that's added by getopt.
   # The -- case above doesn't get hit when user
   # forgets to put in any required args.
   shift
done

# echo "execMode : '$EXEC_MODE'"
# echo "destDir  : '$DEST_DIR'"
# echo "numPages : '$NUM_PAGES'"
# echo "startSite: '$START_SITE'"
# echo "endSite  : '$END_SITE'"
# echo "crawl: '$1'"

if [ $# == 0 ] 
then
    echo "Missing crawl name."
    echo -e $USAGE
    exit -1
else
    CRAWL_NAME=$1
fi

# If we are running in cygwin, we have to convert the 
# path to the Pig script into a Windows path:

export SCRIPT_DIR=`dirname $0`
if [[ `uname` == *CYGWIN* ]]
then 
  export SCRIPT_DIR=`cygpath --mixed ${SCRIPT_DIR}`
fi

# Construct a path name root for the index.
# Like this: <destDir>/<crawlName>_numPages_startSite_endSite,
# where defaults are made to be: allPages, firstSite, lastSite

if [ -z $NUM_PAGES ]
then
    TMP_NUM_PAGES=allPages
else
    TMP_NUM_PAGES=$NUM_PAGES
fi

if [ -z $START_SITE ]
then
    TMP_START_SITE=firstSite
else
    TMP_START_SITE=$START_SITE
fi
    
if [ -z $END_SITE ]
then
    TMP_END_SITE=lastSite
else
    TMP_END_SITE=$END_SITE
fi
    
# Construct the file name where the text fragments
# will be stored. The name starts with the unique
# identifier of how the crawl is retrieved (how many
# pages, start Web site, etc.):
ROOT_DEST_NAME=${DEST_DIR}/${CRAWL_NAME}_${TMP_NUM_PAGES}_${TMP_START_SITE}_${TMP_END_SITE}

# Next, add '_anchors', '_alts' and/or '_titles',
# to the file name, depending on the command line 
# options:
if [ $GET_ANCHORS == "true" ]
then
    ROOT_DEST_NAME=${ROOT_DEST_NAME}_anchors
fi

if [ $GET_ALTS == "true" ]
then
    ROOT_DEST_NAME=${ROOT_DEST_NAME}_alts
fi

if [ $GET_TITLES == "true" ]
then
    ROOT_DEST_NAME=${ROOT_DEST_NAME}_titles
fi

# Must specify at least one type of text fragment to extract:

if (($GET_ANCHORS == "false") && ($GET_ALTS == "false") && ($GET_TITLES == "false"))
then
    echo "Must specify at least one type of fragments to extract: anchor texts, alt texts, or title texts (-l, -a, or -t)."
    exit -1
fi

# Check whether the anchor text target file exists.
# If so, Pig would run for a long time, and then die. Make
# this more fail-fast:

EXISTENCE=`hadoop fs -stat ${ROOT_DEST_NAME}.txt 2> /dev/null` 
if [ -n "$EXISTENCE" ]
then
    echo "File ${ROOT_DEST_NAME}.txt already exists. Quitting."
    exit -1
fi

# The crawl source is expected in the form: crawlName:numPages:startSite:endSite,
# though numPages, startSite, and endSite are all optional. Rather than 
# doing lots of if statements, we just always include the three, even
# if they are empty. If all three are empty that will be crawlName:::,
# which is fine:

CRAWL_SOURCE=${CRAWL_NAME}:${NUM_PAGES}:${START_SITE}:${END_SITE}

pigrun -x $EXEC_MODE \
        TEXT_FRAGMENT_DEST=${ROOT_DEST_NAME}.txt \
        CRAWL_SOURCE=$CRAWL_SOURCE \
        GET_ANCHORS=$GET_ANCHORS \
        GET_ALTS=$GET_ALTS \
        GET_TITLES=$GET_TITLES \
        ${SCRIPT_DIR}/webBaseAnchorAltTitleText.pig

exit 0
